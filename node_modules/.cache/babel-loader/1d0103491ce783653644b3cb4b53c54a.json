{"remainingRequest":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\src\\store\\modules\\ads.js","dependencies":[{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\src\\store\\modules\\ads.js","mtime":1566765111000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\User\\\\Downloads\\\\UJmart-master\\\\UJmart\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport config from \"../../config/config\";\nvar state = {\n  ad: null,\n  ads: {\n    page: null,\n    pages: null,\n    ads: []\n  }\n};\nvar getters = {\n  ad: function ad(state) {\n    return state.ad;\n  }\n};\nvar mutations = {\n  getAd: function getAd(state, ad) {\n    state.ad = ad;\n  }\n};\nvar actions = {\n  getAd: function () {\n    var _getAd = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, id) {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(config.axiosConf.baseURL, \"ad/one/\").concat(id));\n\n            case 3:\n              res = _context.sent;\n              commit('getAd', res.data.ad);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getAd(_x, _x2) {\n      return _getAd.apply(this, arguments);\n    }\n\n    return getAd;\n  }()\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\src\\store\\modules\\ads.js"],"names":["axios","config","state","ad","ads","page","pages","getters","mutations","getAd","actions","id","commit","get","axiosConf","baseURL","res","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AAEA,IAAMC,KAAK,GAAG;AAEZC,EAAAA,EAAE,EAAE,IAFQ;AAGZC,EAAAA,GAAG,EAAE;AACHC,IAAAA,IAAI,EAAE,IADH;AAEHC,IAAAA,KAAK,EAAE,IAFJ;AAGHF,IAAAA,GAAG,EAAE;AAHF;AAHO,CAAd;AAWA,IAAMG,OAAO,GAAG;AACdJ,EAAAA,EAAE,EAAE,YAACD,KAAD;AAAA,WAAWA,KAAK,CAACC,EAAjB;AAAA;AADU,CAAhB;AAIA,IAAMK,SAAS,GAAG;AAChBC,EAAAA,KADgB,iBACVP,KADU,EACHC,EADG,EACC;AACfD,IAAAA,KAAK,CAACC,EAAN,GAAWA,EAAX;AACD;AAHe,CAAlB;AAMA,IAAMO,OAAO,GAAG;AAERD,EAAAA,KAFQ;AAAA;AAAA;AAAA,mDAEQE,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDC,cAAAA,MAFC,QAEDA,MAFC;AAAA;AAAA,qBAGIZ,KAAK,CAACa,GAAN,WAAaZ,MAAM,CAACa,SAAP,CAAiBC,OAA9B,oBAA+CJ,EAA/C,EAHJ;;AAAA;AAGRK,cAAAA,GAHQ;AAIZJ,cAAAA,MAAM,CAAC,OAAD,EAAUI,GAAG,CAACC,IAAJ,CAASd,EAAnB,CAAN;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AAUA,eAAe;AAEbD,EAAAA,KAAK,EAALA,KAFa;AAGbK,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,SAAS,EAATA,SAJa;AAKbE,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["import axios from 'axios'\nimport config from '../../config/config'\n\nconst state = {\n\n  ad: null,\n  ads: {\n    page: null,\n    pages: null,\n    ads: []\n  }\n\n}\n\nconst getters = {\n  ad: (state) => state.ad\n}\n\nconst mutations = {\n  getAd(state, ad) {\n    state.ad = ad\n  }\n}\n\nconst actions = {\n\n  async getAd({commit}, id) {\n    let res = await axios.get(`${config.axiosConf.baseURL}ad/one/${id}`)\n    commit('getAd', res.data.ad)\n  }\n \n}\n\n\nexport default {\n\n  state,\n  getters,\n  mutations,\n  actions\n\n}"]}]}