{"remainingRequest":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\UJmart\\src\\components\\admin\\adminNotifications.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\UJmart\\src\\components\\admin\\adminNotifications.vue","mtime":1586433062725},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\UJmart\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\UJmart\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n\nvar _objectSpread2;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: \"adminCampuses\",\n  data: function data() {\n    return {\n      notification: {\n        title: '',\n        link: '',\n        image: '',\n        _id: ''\n      }\n    };\n  },\n  methods: _objectSpread({}, mapActions(['getNotifications']), (_objectSpread2 = {\n    setEditData: function setEditData(not) {\n      this.notification = not;\n    },\n    update: function update() {\n      var _this = this;\n\n      var loader = this.$loading.show();\n      this.$axios.put(\"/notification/update/\".concat(this.notification._id), this.notification).then(function (res) {\n        if (res.data.error) {\n          _this.$toasted.error(res.data.message, {\n            icon: \"times-circle\"\n          });\n        } else {\n          _this.$toasted.success(res.data.message, {\n            icon: \"check\"\n          });\n\n          _this.getNotifications();\n        }\n\n        loader.hide();\n      }).catch(function (err) {\n        _this.$toasted.error(err, {\n          icon: \"times-circle\"\n        });\n\n        loader.hide();\n      });\n    },\n    remove: function remove(id) {\n      var _this2 = this;\n\n      if (confirm(\"Are you sure you want to remove this notification?\")) {\n        var loader = this.$loading.show();\n        this.$axios.delete(\"/notification/remove/\".concat(id), this.$headers()).then(function (res) {\n          if (res.data.error) {\n            _this2.$toasted.error(res.data.message, {\n              icon: \"times-circle\"\n            });\n          } else {\n            _this2.$toasted.success(res.data.message, {\n              icon: \"check\"\n            });\n\n            _this2.notification.title = '';\n            _this2.notification.shortDesc = '';\n            _this2.notification.notification = '';\n            _this2.notification.id = '';\n\n            _this2.getNotifications();\n          }\n\n          loader.hide();\n        }).catch(function (err) {\n          _this2.$toasted.error(err, {\n            icon: \"times-circle\"\n          });\n\n          loader.hide();\n        });\n      }\n    }\n  }, _defineProperty(_objectSpread2, \"update\", function update() {\n    var _this3 = this;\n\n    var loader = this.$loading.show();\n    this.$axios.put(\"/notification/update/\".concat(this.notification._id), this.notification, this.$headers()).then(function (res) {\n      if (res.data.error) {\n        _this3.$toasted.error(res.data.message, {\n          icon: \"times-circle\"\n        });\n      } else {\n        _this3.$toasted.success(res.data.message, {\n          icon: \"check\"\n        });\n\n        _this3.getNotifications();\n      }\n\n      loader.hide();\n    }).catch(function (err) {\n      loader.hide();\n\n      _this3.$toasted.error(err, {\n        icon: \"times-circle\"\n      });\n    });\n  }), _defineProperty(_objectSpread2, \"updateImage\", function updateImage() {\n    var _this4 = this;\n\n    var loader = this.$loading.show();\n    var fd = new FormData();\n    fd.append(\"notificationImg\", this.$refs.notImg.files[0], this.$refs.notImg.files[0].name);\n    this.$axios.put(\"/notification/update/image/\".concat(this.notification._id), fd, this.$headers()).then(function (res) {\n      if (res.data.error) {\n        _this4.$toasted.error(res.data.message, {\n          icon: \"times-circle\"\n        });\n      } else {\n        _this4.$toasted.success(res.data.message, {\n          icon: \"check\"\n        });\n\n        _this4.getNotifications();\n      }\n\n      loader.hide();\n    }).catch(function (err) {\n      loader.hide();\n\n      _this4.$toasted.error(err, {\n        icon: \"times-circle\"\n      });\n    });\n  }), _objectSpread2)),\n  computed: mapGetters(['notifications']),\n  created: function created() {\n    this.getNotifications();\n  }\n};",{"version":3,"sources":["adminNotifications.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"p-2 yellow lighten-2\">\n\n    <div class=\"collection mt-3\" v-if=\"notifications.length > 0\">\n      <a href=\"javascript:void(0)\" v-for=\"notification in notifications\" :key=\"notification._id\" class=\"collection-item black-text\" @click=\"setEditData(notification)\" >\n        <div> \n          <p class=\"left\">{{notification.title}} </p>\n\n          <span class=\"right\">\n            <div>\n              <a href=\"#notificationEdit\" class=\"btn modal-trigger blue\"><i class=\"fa fa-pen\"></i></a>\n              <a href=\"#notificationImage\" class=\"btn modal-trigger brown\"><i class=\"fa fa-image\"></i></a>\n              <a href=\"#\" class=\"btn red\" @click=\"remove(notification._id)\"><i class=\"fa fa-trash\"></i></a>\n            </div>\n          </span>\n\n          <div class=\"clearfix\"></div>\n\n        </div>\n      </a>\n    </div>\n\n\n    <!-- NOTIFICATIONS EDIT MODAL -->\n    <div id=\"notificationEdit\" class=\"modal teal\">\n      <div class=\"modal-content\">\n        <div>\n          <h5 class=\"white-text\">Edit notification</h5>\n          <p>Name</p>\n          <input type=\"text\" placeholder=\"Name\" v-model=\"notification.title\">\n          <p>Link</p>\n          <input type=\"text\" placeholder=\"Link\" v-model=\"notification.link\">\n\n        </div>\n      </div>\n      <div class=\"modal-footer orange darken-4\">\n        <a href=\"#!\" class=\"modal-close btn teal\" @click=\"update()\">Update</a>&nbsp;\n        <a href=\"#!\" class=\"modal-close btn white black-text\">Cancel</a>\n      </div>\n    </div>\n\n    <!-- NOTIFICATIONS IMAGE UPDATE -->\n    <div id=\"notificationImage\" class=\"modal teal\">\n      <div class=\"modal-content\">\n        <div>\n          \n          <h5 class=\"white-text\">Update Notification Image</h5>\n\n          <div class=\"notImg\">\n            <img :src=\"this.$baseUrl+notification.image\" alt=\"\">\n          </div>\n \n          <input type=\"file\" name=\"\" ref=\"notImg\">\n\n        </div>\n      </div>\n      <div class=\"modal-footer orange darken-4\">\n        <a href=\"#!\" class=\"modal-close btn teal\" @click=\"updateImage()\">Update</a>&nbsp;\n        <a href=\"#!\" class=\"modal-close btn white black-text\">Cancel</a>\n      </div>\n    </div>\n\n\n    <div v-if=\"notifications.length == 0\" class=\"purple p-2 mt-2\">\n      <p class=\"display-1 center  p-2 mt-2\">\n        <i class=\"fa fa-times-circle fa-4x\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"center\">No Notifications</p>\n\n    </div>\n\n    \n\n  </div>\n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex'\n\n\nexport default {\n\n  name: \"adminCampuses\",\n  data() {\n    return {\n      notification: {\n        title: '',\n        link: '',\n        image: '',\n        _id: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['getNotifications']),\n\n    setEditData(not) {\n      this.notification = not\n    },\n\n    update() {\n      \n      let loader = this.$loading.show()\n\n      this.$axios.put(`/notification/update/${this.notification._id}`, this.notification)\n        .then(res => {\n          \n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.getNotifications()\n          }\n\n          loader.hide()          \n\n        }).catch(err => {\n\n          this.$toasted.error(err, {icon:\"times-circle\"})\n          loader.hide()\n\n        })\n\n    },\n\n    remove(id) {\n\n      if(confirm(\"Are you sure you want to remove this notification?\")) {\n        let loader = this.$loading.show()\n\n        this.$axios.delete(`/notification/remove/${id}`, this.$headers())\n          .then(res => {\n            \n            if(res.data.error) {\n              this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n            } else {\n              \n              this.$toasted.success(res.data.message, {icon: \"check\"})\n              this.notification.title = ''\n              this.notification.shortDesc = ''\n              this.notification.notification = ''\n              this.notification.id = ''\n              this.getNotifications()\n\n            }\n\n            loader.hide()\n\n          })\n            .catch(err => {\n              \n              this.$toasted.error(err, {icon: \"times-circle\"})\n              loader.hide()\n\n            })\n      }\n    },\n\n    update() {\n      \n      let loader = this.$loading.show()\n\n      this.$axios.put(`/notification/update/${this.notification._id}`, this.notification, this.$headers())\n        .then(res => {\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})           \n            this.getNotifications()\n          }\n\n          loader.hide()\n\n        }).catch(err => {\n          loader.hide()\n          this.$toasted.error(err, {icon: \"times-circle\"})\n        })\n\n    },\n\n    updateImage() {\n      \n      let loader = this.$loading.show()\n\n      let fd = new FormData()\n\n      fd.append(\"notificationImg\", this.$refs.notImg.files[0], this.$refs.notImg.files[0].name)\n\n      this.$axios.put(`/notification/update/image/${this.notification._id}`, fd, this.$headers())\n        .then(res => {\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.getNotifications()\n          }\n\n          loader.hide()\n\n        }).catch(err => {\n          loader.hide()\n          this.$toasted.error(err, {icon: \"times-circle\"})\n        })\n\n    }\n\n  },\n  computed: mapGetters(['notifications']),\n  created() {\n    this.getNotifications()\n  }\n\n\n}\n</script>\n\n<style scoped>\n  .notImg {\n    max-height: 400px;\n    justify-content: center;\n    padding-top: 10px;\n  }\n\n  .notImg img {\n    max-height: 200px;\n    max-width: 100%;\n  }\n</style>\n"],"sourceRoot":"src/components/admin"}]}