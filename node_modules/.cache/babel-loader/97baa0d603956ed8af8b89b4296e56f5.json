{"remainingRequest":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\UJmarketplace\\src\\components\\layout\\notifications_.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\src\\components\\layout\\notifications_.vue","mtime":1589894079552},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\User\\\\Desktop\\\\UJmarketplace\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport config from \"../../config/config\";\nimport { Hooper, Slide } from \"hooper\";\nimport \"hooper/dist/hooper.css\";\nexport default {\n  name: \"notification\",\n  data: function data() {\n    return {\n      notifications: [],\n      baseUrl: config.axiosConf.baseURL,\n      scroll: false\n    };\n  },\n  components: {\n    hooper: Hooper,\n    slide: Slide\n  },\n  methods: {\n    getNotifications: function () {\n      var _getNotifications = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$axios.get('/notification/all').then(function (res) {\n                  _this.notifications = res.data.notifications;\n\n                  if (_this.notifications.length > 1) {\n                    _this.scroll = true;\n                  }\n                }).catch(function (err) {\n                  _this.$toasted.error(err + \"uu\", {\n                    icon: \"times-circle\"\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getNotifications() {\n        return _getNotifications.apply(this, arguments);\n      }\n\n      return getNotifications;\n    }()\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getNotifications();\n\n            case 2:\n              this.baseUrl = this.$baseUrl;\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["notifications_.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA,OAAA,MAAA;AACA,SAAA,MAAA,EAAA,KAAA,QAAA,QAAA;AACA,OAAA,wBAAA;AAEA,eAAA;AAEA,EAAA,IAAA,EAAA,cAFA;AAIA,EAAA,IAAA,EAAA;AAAA,WAAA;AAEA,MAAA,aAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,MAAA,CAAA,SAAA,CAAA,OAHA;AAIA,MAAA,MAAA,EAAA;AAJA,KAAA;AAAA,GAJA;AAYA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,KAAA,EAAA;AAFA,GAZA;AAiBA,EAAA,OAAA,EAAA;AAEA,IAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIA,qBAAA,MAAA,CAAA,GAAA,CAAA,mBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AAEA,kBAAA,KAAA,CAAA,aAAA,GAAA,GAAA,CAAA,IAAA,CAAA,aAAA;;AACA,sBAAA,KAAA,CAAA,aAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,oBAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AACA;AAEA,iBARA,EAQA,KARA,CAQA,UAAA,GAAA,EAAA;AAEA,kBAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,GAAA,IAAA,EAAA;AAAA,oBAAA,IAAA,EAAA;AAAA,mBAAA;AAEA,iBAZA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAjBA;AAuCA,EAAA,OAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAyCA,KAAA,gBAAA,EAzCA;;AAAA;AA0CA,mBAAA,OAAA,GAAA,KAAA,QAAA;;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\n  \n  <div class=\"mt-2 SLIDER\" v-if=\"notifications.length > 0\">\n\n    <hooper :itemsToShow=\"1\" pagination=\"yes\" :centerMode=\"true\" :infiniteScroll=\"scroll\" :autoPlay=\"true\" :playSpeed=\"5000\" :wheelControl=\"false\">\n\n      <slide v-for=\"(not, i) in notifications\" :key=\"not._id\" :index=\"i\">\n        <a :href=\"not.link\" class=\"slideimg\">\n          <img :src=\"baseUrl+not.image\" alt=\"\">\n        </a>\n      </slide>\n\n    </hooper>\n        \n  </div>\n\n</template>\n\n<script>\nimport config from \"../../config/config\"\nimport {Hooper, Slide} from \"hooper\"\nimport \"hooper/dist/hooper.css\"\n\nexport default {\n\n  name: \"notification\",\n\n  data: () => ({\n\n    notifications: [],\n    baseUrl: config.axiosConf.baseURL,\n    scroll: false\n\n  }),\n\n  components: {\n    hooper: Hooper,\n    slide: Slide\n  },\n\n  methods: {\n\n    async getNotifications() {\n\n      this.$axios.get('/notification/all')\n        .then(res => {\n          \n          this.notifications = res.data.notifications\n          if(this.notifications.length > 1) {\n            this.scroll = true\n          }\n\n        }).catch(err => {\n\n          this.$toasted.error(err + \"uu\", {icon: \"times-circle\"})\n        \n        })\n     \n    }\n\n  },\n\n  async created() {\n\n    await this.getNotifications()\n    this.baseUrl = this.$baseUrl\n    \n  }\n\n}\n</script>\n\n<style scoped>\n\n  .slideimg img {\n    width: 100%;\n  }\n\n  a {\n    width: 100%;\n    overflow: hidden;\n  }\n\n  .SLIDER {\n    box-shadow: 0px 0px 6px #fff;\n  }\n\n  \n\n  @media (min-width: 993px) {\n    .hooper {\n      height: 26.25vw;\n    }\n  }\n\n  @media (max-width: 992px) {\n    .hooper {\n      height: 31.875vw;\n    }\n  }\n\n  @media (max-width: 600px) {\n    .hooper {\n      height: 33.75vw;\n    }\n  }\n\n</style>\n"],"sourceRoot":"src/components/layout"}]}