{"remainingRequest":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\src\\components\\admin\\adminCampuses.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\src\\components\\admin\\adminCampuses.vue","mtime":1566765111000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters, mapActions} from 'vuex'\n\n\nexport default {\n\n  name: \"adminCampuses\",\n  data() {\n    return {\n      campus: {\n        name: '',\n        id: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['getCampuses']),\n\n    setEditData(name, id) {\n\n      this.campus.name = name\n      this.campus.id = id\n\n    },\n\n    update() {\n      \n      let loader = this.$loading.show()\n\n      this.$axios.put(`/campus/update/${this.campus.id}`, {name: this.campus.name})\n        .then(res => {\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.campus.name = ''\n            this.campus.id = ''\n            this.getCampuses()\n          }\n\n          loader.hide()\n\n        }).catch(err => {\n            loader.hide()\n            this.$toasted.error(err, {icon: \"times-circle\"})\n          })\n\n    },\n\n    remove() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete(`/campus/remove/${this.campus.id}`)\n        .then(res => {\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.campus.name = ''\n            this.campus.id = ''\n            this.getCampuses()\n          }\n\n          loader.hide()\n\n        })\n          .catch(err => {\n            loader.hide()\n            this.$toasted.error(err, {icon: \"times-circle\"})\n          })\n    }\n\n  },\n  computed: mapGetters(['campuses']),\n  created() {\n    this.getCampuses()\n  }\n\n\n}\n",{"version":3,"sources":["adminCampuses.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA","file":"adminCampuses.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <div>\n\n    <h3><i class=\"fa fa-building\"></i> Campuses</h3>\n\n    <div class=\"list-group mt-3\">\n      <a href=\"javascript:void(0)\" v-for=\"campus in campuses\" :key=\"campus._id\" class=\"list-group-item list-group-item-action list-group-item-primary\" @click=\"setEditData(campus.name, campus._id)\" >\n        <div> \n\n          <i class=\"fa fa-building\"></i> &nbsp;{{campus.name}} \n          <span class=\"float-right\">\n            <div class=\"btn-group\">\n              <button class=\"btn py-1 btn-info\" data-toggle=\"modal\" data-target=\"#editCamp\"><i class=\"fa fa-pen\"></i></button>\n              <button class=\"btn py-1 btn-danger\" data-toggle=\"modal\" data-target=\"#remCamp\"><i class=\"fa fa-trash\"></i></button>\n            </div>\n          </span>\n          <div class=\"clearfix\"></div>\n\n        </div>\n      </a>\n    </div>\n\n    <div v-if=\"campuses.length == 0\">\n      <h1 class=\"display-1 text-center\">\n        <i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\n      </h1>\n      <h4 class=\"text-center\">No Campuses</h4>\n    </div>\n\n    <!-- campus -->\n    <div class=\"modal fade\" id=\"editCamp\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content bg-dark border-0 text-white\">\n          <div class=\"modal-header border-0\">\n            <h5 class=\"modal-title text-orange\"><i class=\"fa fa-building\"></i> Campus</h5>\n              <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <div class=\"form-group\">\n              <label for=\"cName\">Name</label>\n              <input type=\"icon\" v-model=\"campus.name\" id=\"cName\" class=\"form-control\" placeholder=\"\" aria-describedby=\"titleHelp\">\n            </div>\n\n\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" @click=\"update\">Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- campus DELETE -->\n    <div class=\"modal fade\" id=\"remCamp\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content bg-dark border-0 text-white\">\n          <div class=\"modal-header border-0\">\n            <h5 class=\"modal-title text-orange\"><i class=\"fa fa-building\"></i> campus</h5>\n              <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <p>Are you sure you want to remove this campus?</p>\n\n\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\n            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" @click=\"remove\">Yes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex'\n\n\nexport default {\n\n  name: \"adminCampuses\",\n  data() {\n    return {\n      campus: {\n        name: '',\n        id: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['getCampuses']),\n\n    setEditData(name, id) {\n\n      this.campus.name = name\n      this.campus.id = id\n\n    },\n\n    update() {\n      \n      let loader = this.$loading.show()\n\n      this.$axios.put(`/campus/update/${this.campus.id}`, {name: this.campus.name})\n        .then(res => {\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.campus.name = ''\n            this.campus.id = ''\n            this.getCampuses()\n          }\n\n          loader.hide()\n\n        }).catch(err => {\n            loader.hide()\n            this.$toasted.error(err, {icon: \"times-circle\"})\n          })\n\n    },\n\n    remove() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete(`/campus/remove/${this.campus.id}`)\n        .then(res => {\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.campus.name = ''\n            this.campus.id = ''\n            this.getCampuses()\n          }\n\n          loader.hide()\n\n        })\n          .catch(err => {\n            loader.hide()\n            this.$toasted.error(err, {icon: \"times-circle\"})\n          })\n    }\n\n  },\n  computed: mapGetters(['campuses']),\n  created() {\n    this.getCampuses()\n  }\n\n\n}\n</script>\n\n<style>\n\n</style>\n"]}]}