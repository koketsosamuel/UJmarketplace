{"remainingRequest":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\UJmart\\src\\components\\ads\\picManage.vue?vue&type=style&index=0&id=59445910&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\UJmart\\src\\components\\ads\\picManage.vue","mtime":1585559143516},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.flex img {\n    max-width: 99%;\n    max-height: 148.5px !important;\n}\n\n.flex {\n  height: 150px !important;\n  border: 2px #6e047c solid;\n}\n\n.rem {\n  z-index: 1000 !important;\n  position: relative;\n  top: 0px;\n  margin-bottom: 7px;\n}\n\n\n\n",{"version":3,"sources":["picManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"picManage.vue","sourceRoot":"src/components/ads","sourcesContent":["<template>\n  \n  <div>\n\n    <div class=\"purple p-2 mt-2 container\">\n      \n      <h5 class=\"white-text\">\n        <i class=\"fa fa-image d-inline\" aria-hidden=\"true\"></i>&nbsp;Pictures\n      </h5>\n\n      <div class=\"row\">\n        <div class=\"col m4 s6 p-0 px-3 my-2\" v-for=\"(image, i) in images\" :key=\"i\">\n\n          <div class=\"flex h-100 grad-4 border border-primary border-2\">\n            <!-- <img :src=\"imagePaths[i]\" :alt=\"image.name\" @click=\"index = i\"> -->\n            <vImage :src=\"imagePaths[i]\" />\n          </div>\n\n          <div class=\"rem\">\n            <button class=\"btn red\" @click=\"remPic(image, i)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n          </div>\n\n        </div>\n      </div>\n\n      <div class=\"my-4\" v-if=\"images.length == 0\">\n        <h1 class=\"text-center\">\n          <i class=\"fa fa-images fa-3x\" aria-hidden=\"true\"></i>\n          <br> No Images\n        </h1>\n      </div>\n\n\n      <!-- PICTURE -->\n      <div class=\"d-none\">\n        <input type=\"file\" class=\"form-control-file\" ref=\"files\" @change=\"addPic\">\n      </div>\n\n\n      <button class=\"btn btn-block orange my-2\" @click=\"$refs.files.click()\" v-if=\"images.length < 6\">\n        <i class=\"fa fa-camera-retro\" aria-hidden=\"true\"></i> Add Picture\n      </button>\n\n      <!-- GALLERY COMPONENT -->\n      <vueGallery :images=\"imagePaths\" :index=\"index\" @close=\"index = null\"/>\n\n    </div>\n\n  </div>\n\n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex'\nimport config from '../../config/config'\nimport vImage from 'v-lazy-image'\nimport vueGallery from 'vue-gallery-slideshow'\nimport { setTimeout } from 'timers';\n\nexport default {\n\n  name: \"adManage\",\n\n  data(){\n    return {\n      \n      urlBase: config.axiosConf.baseURL,\n\n      adv: {\n        name: null,\n        images: [],\n        _id: null\n      },\n\n      imagePaths: [],\n\n      images: [],\n\n      index: null,\n\n      imageTypes: [\"image/jpeg\", \"image/png\", \"image/gif\"],\n\n      axiosOpts: null\n\n\n    }\n  },\n\n  components: {\n    vueGallery,\n    vImage\n  },\n\n  methods: {\n\n    ...mapActions(['getAd']),\n\n    addPic() {\n\n      let file = this.$refs.files.files[0]\n      let typeError = false\n\n      // validate type\n      if(!this.imageTypes.includes(file.type)) {\n        //console.log(unverified)\n        typeError = true\n      }\n\n      // type error message\n      if(typeError) {\n        this.$toasted.error(\"Upload only valid images\", {icon: \"times-circle\"})\n      } else {\n\n        let fd = new FormData\n        fd.append(\"image\", file, file.name)\n\n        let loader = this.$loading.show()\n\n        this.$axios.put(\"/ad/addpic/\"+this.$route.params.adId,fd, this.axiosOpts).then(res => {\n\n            loader.hide()\n\n            if(res.data.error) {\n              this.$toasted.error(res.data.message, {icon:\"times-circle\"})\n            } else {\n              \n              setTimeout(() => {\n                this.images.push(res.data.image)\n                this.imagePaths.push(config.axiosConf.baseURL+res.data.image.path)\n              }, 1000)\n\n              this.$toasted.success(res.data.message, {icon:\"check\"})\n            }\n          })\n          .catch(err => {\n            this.$toasted.error(err, {icon:\"times-circle\"})\n            loader.hide()\n          })\n      } \n\n    }, \n\n    async init() {\n      await this.getAd(this.$route.params.adId)\n      this.adv = await this.ad\n      this.images = await this.ad.images\n      this.imagePaths = []\n\n      for(let i = 0; i < this.images.length; i++) {\n        this.imagePaths.push(config.axiosConf.baseURL+this.images[i].path)\n      }\n    }, \n\n    async remPic(image, index) {\n\n      let loader = this.$loading.show()\n\n      this.$axios.post(\"/ad/rempic/\"+this.$route.params.adId, {index, imgUrl: image.path}, this.axiosOpts)\n        .then(res => {\n\n          if(res.data.error) {\n\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n\n          } else {\n\n            this.images.splice(index, 1)\n            this.imagePaths.splice(index, 1)\n            this.init()\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n\n          }\n\n          loader.hide()\n\n        }).catch(err => {\n\n          loader.hide()\n\n          this.$toasted.error(err, {icon: \"times-circle\"})\n\n        })\n\n    }\n\n  },\n\n  computed: mapGetters(['ad', 'authInfo']),\n\n  async created() {\n    \n    let loader = this.$loading.show()\n    await this.init()\n    this.axiosOpts = this.$headers\n    loader.hide()\n\n  }\n\n}\n</script>\n\n<style scoped>\n\n.flex img {\n    max-width: 99%;\n    max-height: 148.5px !important;\n}\n\n.flex {\n  height: 150px !important;\n  border: 2px #6e047c solid;\n}\n\n.rem {\n  z-index: 1000 !important;\n  position: relative;\n  top: 0px;\n  margin-bottom: 7px;\n}\n\n\n\n</style>\n"]}]}