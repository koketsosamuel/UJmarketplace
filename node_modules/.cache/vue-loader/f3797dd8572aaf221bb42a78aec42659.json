{"remainingRequest":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\UJmart\\src\\components\\admin\\searchUsers.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\UJmart\\src\\components\\admin\\searchUsers.vue","mtime":1586434706579},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters} from 'vuex'\nimport Vue from \"vue\"\n\nexport default {\n\n  name: \"searchusers\",\n\n  data() {\n    return {\n      users: [],\n      page: 1,\n      pages: 1,\n      class: \"\",\n      userObj: null,\n\n      searchUser: \"\"\n    }\n  },\n\n  methods: {\n\n    async getSearchRes() {\n\n      let loader = this.$loading.show()\n\n      let res = await this.$axios.get(`/user/find/${this.$route.params.search}/${this.$route.params.page}`, this.$headers())\n      \n      this.pages = res.data.pages\n      this.page = res.data.page\n      this.users = res.data.users\n\n      loader.hide()\n\n    },\n\n    search(e) {\n\n      e.preventDefault()\n      this.$router.push(`/search/user/${this.searchUser}/1`)\n\n    },\n    \n\n    remove(id) {\n\n      if(confirm(\"Are you sure you want to delete user?\")) {\n\n        let loader = this.$loading.show()\n\n      \n\n        this.$axios.delete(`/user/rem/${id}`, {\n          headers: {\n            Authorization: \"Bearer \" + this.$jsCookie.getJSON(\"4u7h3n71c4710n\").token\n          }\n        })\n          .then(res => {\n\n            loader.hide()\n\n            if(res.data.error) {\n              this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n            } else {\n              this.$toasted.success(res.data.message, {icon: \"check\"})         \n              this.getUsers(this.users.page)\n            }\n\n          })\n            .catch(err => {\n              this.$toasted.error(err, {icon: \"times-circle\"})\n              loader.hide()\n            })\n\n      }\n    },\n\n    async gotopage(pageNum) {\n      let loader = this.$loading.show()\n      await this.getUsers({page:pageNum, query: this.query, sort: this.sort})\n      loader.hide()\n    },\n\n    objectMarkup(obj) {\n      let str = \"\"\n\n      Object.keys(obj).forEach((key) => {\n        str += `<p style=\"padding:0px;margin:0px;\">${key}: ${obj[key]}</p>`\n      })\n\n      return str\n\n    },\n\n    stroke(id) {\n\n      if(confirm(\"Are you sure you want to stroke user?\")) {\n        \n        let loader = this.$loading.show()\n\n        this.$axios.put(\"/user/stroke/\"+id,{}, this.$headers())\n          .then(res => {\n\n            loader.hide()\n            if(res.data.error) {\n              this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n            } else {\n              this.$toasted.success(res.data.message, {icon: \"check\"})            \n            }\n\n          })\n          .catch(err => {\n            loader.hide()\n            this.$toasted.error(err, {icon: \"times-circle\"})\n          })\n\n      }\n\n\n    }\n\n  },\n\n  computed: mapGetters(['authInfo']),\n\n  watch: {\n    async $route() {\n      let loader = this.$loading.show()\n      await this.getSearchRes()\n      loader.hide()\n    }\n  },\n\n  async created() {\n\n    let loader = this.$loading.show()\n    await this.getSearchRes()\n    loader.hide()\n\n  }\n\n}\n",{"version":3,"sources":["searchUsers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA","file":"searchUsers.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  \n  <div class=\"green lighten-4 p-2 mt-2 container mb-4\">\n\n    <p><i class=\"fa fa-search\" aria-hidden=\"true\"></i> {{$route.params.search}}</p>\n\n    <form class=\"form-inline my-2 my-lg-0\" @submit=\"search\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" v-model=\"searchUser\" placeholder=\"Search\" aria-label=\"Search\" required>\n      <button \n        class=\"btn green\" \n        type=\"submit\">\n          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n      </button>\n    </form>\n    \n\n    <ul class=\"collapsible\">\n        <li v-for=\"(user, i) in users\" :key=\"i+user._id\" @click=\"userObj = user\">\n          <div class=\"collapsible-header green white-text\">\n            <span class=\"left\">\n              <i class=\"fas fa-user\"></i>{{user.name}} \n            </span>\n          </div>\n          <div class=\"collapsible-body\">\n              <p v-if=\"user._id == authInfo._id\">Come on its you!!</p>\n              <div class=\"data\" v-else v-html=\"objectMarkup(user)\"></div>\n              <a class=\"btn grey modal-trigger\" @click=\"stroke(user._id)\">stroke</a>&nbsp;\n              <a class=\"btn red modal-trigger\" @click=\"remove(user._id)\">Remove</a>\n          </div>\n        </li>\n      </ul>\n\n    <paginate\n      :page-count=\"Number(pages)\"\n      :click-handler=\"gotopage\"\n      container-class=\"pagination mt-4\"\n      page-class=\"page-item\"\n      page-link-class=\"page-link text-white bg-primary\"\n      prev-class=\"page-item\"\n      prev-link-class=\"page-link bg-dark text-white\"\n      next-class=\"page-item\"\n      next-link-class=\"page-link bg-dark text-white\"\n      active-class=\"active disabled font-weight-bold\"      \n      v-if=\"pages > 1\"\n    />\n\n    <div v-if=\"users.length == 0\" class=\"purple p-2 mt-2 center\">\n      <p class=\"display-1 center\">\n        <i class=\"fa fa-user-times fa-4x\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"text-center mt-2 p-2\">No Users</p>\n    </div>\n\n    \n\n  </div>\n</template>\n\n<script>\nimport {mapGetters} from 'vuex'\nimport Vue from \"vue\"\n\nexport default {\n\n  name: \"searchusers\",\n\n  data() {\n    return {\n      users: [],\n      page: 1,\n      pages: 1,\n      class: \"\",\n      userObj: null,\n\n      searchUser: \"\"\n    }\n  },\n\n  methods: {\n\n    async getSearchRes() {\n\n      let loader = this.$loading.show()\n\n      let res = await this.$axios.get(`/user/find/${this.$route.params.search}/${this.$route.params.page}`, this.$headers())\n      \n      this.pages = res.data.pages\n      this.page = res.data.page\n      this.users = res.data.users\n\n      loader.hide()\n\n    },\n\n    search(e) {\n\n      e.preventDefault()\n      this.$router.push(`/search/user/${this.searchUser}/1`)\n\n    },\n    \n\n    remove(id) {\n\n      if(confirm(\"Are you sure you want to delete user?\")) {\n\n        let loader = this.$loading.show()\n\n      \n\n        this.$axios.delete(`/user/rem/${id}`, {\n          headers: {\n            Authorization: \"Bearer \" + this.$jsCookie.getJSON(\"4u7h3n71c4710n\").token\n          }\n        })\n          .then(res => {\n\n            loader.hide()\n\n            if(res.data.error) {\n              this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n            } else {\n              this.$toasted.success(res.data.message, {icon: \"check\"})         \n              this.getUsers(this.users.page)\n            }\n\n          })\n            .catch(err => {\n              this.$toasted.error(err, {icon: \"times-circle\"})\n              loader.hide()\n            })\n\n      }\n    },\n\n    async gotopage(pageNum) {\n      let loader = this.$loading.show()\n      await this.getUsers({page:pageNum, query: this.query, sort: this.sort})\n      loader.hide()\n    },\n\n    objectMarkup(obj) {\n      let str = \"\"\n\n      Object.keys(obj).forEach((key) => {\n        str += `<p style=\"padding:0px;margin:0px;\">${key}: ${obj[key]}</p>`\n      })\n\n      return str\n\n    },\n\n    stroke(id) {\n\n      if(confirm(\"Are you sure you want to stroke user?\")) {\n        \n        let loader = this.$loading.show()\n\n        this.$axios.put(\"/user/stroke/\"+id,{}, this.$headers())\n          .then(res => {\n\n            loader.hide()\n            if(res.data.error) {\n              this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n            } else {\n              this.$toasted.success(res.data.message, {icon: \"check\"})            \n            }\n\n          })\n          .catch(err => {\n            loader.hide()\n            this.$toasted.error(err, {icon: \"times-circle\"})\n          })\n\n      }\n\n\n    }\n\n  },\n\n  computed: mapGetters(['authInfo']),\n\n  watch: {\n    async $route() {\n      let loader = this.$loading.show()\n      await this.getSearchRes()\n      loader.hide()\n    }\n  },\n\n  async created() {\n\n    let loader = this.$loading.show()\n    await this.getSearchRes()\n    loader.hide()\n\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}