{"remainingRequest":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\UJmart\\src\\components\\auth\\profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\UJmart\\src\\components\\auth\\profile.vue","mtime":1586506813567},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters, mapActions} from 'vuex'\n\n// exportation\nexport default {\n\n  name: \"profile\",\n\n  data() {\n    return {\n\n      user: {\n        name: null,\n        campus: null,\n        pos: null,\n        cellNo: null,\n        whatsAppNo: null,\n        email: null,\n        studentNo: null,\n        _id: null\n      },\n\n      oldPwd: \"\",\n\n      userUpdate: {\n        name: \"null\",\n        campus: null,\n        pos: null,\n        cellNo: null,\n        whatsAppNo: null,\n        email: null,\n        studentNo: null\n      },\n\n      newPwd: \"\",\n      posOther: \"\"\n\n    }\n\n  },\n\n  methods: {\n\n    ...mapActions(['getCampuses', \"DeAuth\"]),\n\n    getUser(){\n      this.$axios.get('/user/profile', this.$headers())\n        .then(res => {\n        \n          this.user = res.data.profile\n\n        })\n        .catch(err => {\n          this.$toasted.error(err, {icon: \"times-circle\"})\n        })\n    },\n\n    changePwd() {\n\n\n      if(this.newPwd.length < 4 || this.oldPwd.length < 4) {\n        this.$toasted.error(\"password must atleast be 4 charecters long\", {icon: \"times-circle\"})\n      } else {\n\n        let loader = this.$loading.show()\n\n        this.$axios.post('/user/passwordchange', {oldPwd: this.oldPwd, newPwd: this.newPwd},this.$headers()).then(res => {\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.oldPwd = \"\"\n            this.newPwd = \"\"\n          }\n\n          loader.hide()\n\n        })\n        .catch(err => {\n          this.$toasted.error(err, {icon: \"times-circle\"})\n          loader.hide()\n        })\n\n      }\n    },\n\n    setUpdateVals(values) {\n      this.userUpdate = values\n    },\n\n    updateProfile() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.post('/user/profileupdate', {values: this.userUpdate, update: \"profile\"}, this.$headers()).then(res => {\n        \n        if(res.data.error) {\n          this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n        } else {\n          this.$toasted.success(res.data.message, {icon: \"check\"})\n          this.getUser()\n        }\n\n        loader.hide()\n\n      }).catch(err => {\n        this.$toasted.error(err, {icon: \"times-circle\"})\n        loader.hide()\n      })\n    },\n\n    updatePos() {\n      // carefully set postion\n      let position = this.userUpdate.pos\n      let positionOther = this.posOther\n\n      function getPos() {\n\n\n        if(position == 'other') {\n          return positionOther\n        } else {\n          return position\n        }\n      }\n\n      let loader = this.$loading.show()\n\n      this.$axios.post('/user/profileupdate', {values: {pos: getPos()}, update: \"position\"}, this.$headers())\n        .then(res => {\n\n          if(res.data.error) {\n          this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.getUser()\n          }\n\n          loader.hide()\n\n        })\n        .catch(err => {\n\n          this.$toasted.error(err, {icon: \"times-circle\"})\n\n          loader.hide()\n\n        })\n\n    },\n\n    removeSelf() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete('/user/rem/'+this.user._id, this.$headers())\n        .then(res => {\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.DeAuth()\n            this.$router.replace(\"/\")\n          }\n\n          loader.hide()\n\n        }).catch(err => {\n          loader.hide()\n          this.$toasted.error(err, {icon: \"times-circle\"})\n        })\n\n    }\n\n  },\n  // end of methods\n\n  async created() {\n\n    let loader = this.$loading.show()\n\n    await this.getUser()\n    await this.getCampuses()\n\n    loader.hide()\n\n  },\n\n  async beforeMount() { \n    await this.getCampuses()\n    await this.getUser()\n    return false\n  },\n\n  computed: mapGetters(['campuses', 'authInfo'])\n\n\n}\n",{"version":3,"sources":["profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0MA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA","file":"profile.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n  \n<div>\n\n  <div class=\"container p-2 mt-2 purple mb-4\">\n\n    <h5 class=\"white-text\">\n      <i class=\"fa fa-user  d-inline\"></i> Profile\n    </h5>\n    <div class=\"clearfix\"></div>\n\n    <ul class=\"collapsible\">\n\n      <!-- PERSONAL DETAILS -->\n      <li>\n\n          <div class=\"collapsible-header\">\n            <p>\n              Personal Details\n            </p>\n          </div>\n          <div class=\"collapsible-body\">\n              <table class=\"table table-responsive\">\n                <tbody>\n                  <tr>\n                    <td>Name</td>\n                    <td class=\"font-weight-light text-white font-italic\">{{user.name}}</td>\n                  </tr>\n                  <tr>\n                    <td>Campus</td>\n                    <td class=\"font-weight-light text-white font-italic\">{{user.campus}}</td>\n                  </tr>\n                  <tr>\n                    <td>Position</td>\n                    <td class=\"font-weight-light text-white font-italic\">{{user.pos}}</td>\n                  </tr>\n\n                  <tr>\n                    <td>Cell Number</td>\n                    <td class=\"font-weight-light text-white font-italic\">{{user.cellNo}}</td>                  \n\n                  </tr>\n                  <tr>\n                    <td>WhatsApp Number</td>\n                    <td class=\"font-weight-light text-white font-italic\">{{user.whatsAppNo}}</td>                  \n                  </tr>\n                  <tr>\n                    <td>Email</td>\n                    <td class=\"font-weight-light text-white font-italic\">{{user.email}}</td>\n                  </tr>\n\n                </tbody>\n              </table>\n\n          </div>\n        <!-- /CONTACT DETAILS -->\n      </li>\n\n      <li>\n        <!-- MANAGE ACC -->\n\n          <div class=\"collapsible-header\" role=\"tab\" id=\"section2HeaderId\">\n            <p>\n              Manage Account\n            </p>\n          </div>\n          <div class=\"collapsible-body\">\n            <div class=\"card-body\">            \n\n              <div class=\"col-lg-8 col-md-12\">\n\n                <div class=\"card-panel orange darken-4 p-3 mb-4\">\n                  <p>Change Password</p>\n\n                  <div class=\"form-group\">\n                    <label for=\"op\">Old Password</label>\n                    <input type=\"password\" class=\"form-control\"  id=\"op\" v-model=\"oldPwd\">\n                  </div>\n\n                  <div class=\"form-group\">\n                    <label for=\"np\">New Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"np\" v-model=\"newPwd\">\n                  </div>\n\n                  <button class=\"btn btn-block btn-dark\" @click=\"changePwd\">Change Password</button>\n                </div>\n\n                <div class=\"grad-2 border p-2\">\n                  \n\n                  <a class=\"btn btn-block blue modal-trigger\" href=\"#editProfile\" @click=\"setUpdateVals(user)\">\n                    <i class=\"fa fa-pen\" aria-hidden=\"true\"></i> Edit Profile\n                  </a>     \n                  <a class=\"btn btn-block green mt-2 modal-trigger\" href=\"#editPos\" @click=\"setUpdateVals(user)\">\n                    <i class=\"fa fa-pen\" aria-hidden=\"true\"></i> Edit Position\n                  </a> \n                </div>\n\n              </div>\n\n            </div>\n          </div>\n\n        <!-- /MANAGE ACC -->\n      </li>\n\n    </ul>\n    <!-- /COLUMN CONTAINER -->\n\n  </div>\n\n    <!-- EDIT PROFILE -->\n    <div class=\"modal purple\" id=\"editProfile\">\n\n          <div class=\"modal-content\">\n            \n            <!-- NAME -->\n            <div class=\"form-group\">\n              <label for=\"name\"><i class=\"fa fa-tag\" aria-hidden=\"true\"></i> Name</label>\n              <input v-model=\"userUpdate.name\" type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"e.g Koketso Maotomabe\" aria-describedby=\"helpName\" required>\n            </div>\n\n            <!-- CAMPUS -->\n            <div class=\"form-group\">\n              <label for=\"campus\"><i class=\"fa fa-university\" aria-hidden=\"true\"></i> Campus</label>\n              <select class=\"form-control\" id=\"campus\"  v-model=\"userUpdate.campus\" required>\n                <option v-for=\"camp in campuses\" :key=\"camp._id\" :value=\"camp.name\">{{camp.name}}</option>\n              </select>\n              <small id=\"helpName\" class=\"text-muted\">This is the campus where you are to be found</small>\n            </div>\n\n            <!-- PHONE -->\n            <div class=\"form-group\">\n              <label for=\"cNo\"><i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Cellphone No.</label>\n              <input v-model=\"userUpdate.cellNo\" type=\"tel\" id=\"cNo\" class=\"form-control\" placeholder=\"e.g 0712356212\" aria-describedby=\"helpName\" required>\n              <small id=\"helpName\" class=\"text-muted\">This is the number people will use to call you when selling</small>\n            </div>\n\n            <!-- EMAIL -->\n            <div class=\"form-group\">\n              <label for=\"sM\"><i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i> Email</label>\n              <input v-model=\"userUpdate.email\" type=\"email\" id=\"sM\" class=\"form-control\" placeholder=\"e.g whatever@example.com\" aria-describedby=\"helpName\" required>\n            </div>\n\n            <!-- WHATSAPP -->\n            <div class=\"form-group\">\n              <label for=\"sWa\"><i class=\"fab fa-whatsapp\" aria-hidden=\"true\"></i> WhatsApp No.</label>\n              <input v-model=\"userUpdate.whatsAppNo\" type=\"tel\" id=\"sWa\" class=\"form-control\" placeholder=\"e.g 0623549212\" aria-describedby=\"helpName\">\n              <small id=\"helpName\" class=\"text-muted\">This is the number people will use to WhatsApp you when you are selling</small>\n            </div>\n\n\n          </div>\n\n\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn modal-close purple\" data-dismiss=\"modal\" @click=\"updateProfile\">Update</button>\n            <button type=\"button\" class=\"btn modal-close white black-text\" data-dismiss=\"modal\">Cancel</button>\n          </div>\n\n    </div>\n\n    <!-- EDIT POSITION -->\n    <div class=\"modal fade green\" id=\"editPos\">\n      \n          <div class=\"modal-content\">\n            \n            <div class=\"form-group\">\n              <label for=\"campus\"><i class=\"fa fa-tag\" aria-hidden=\"true\"></i> Position</label>\n              <select class=\"form-control\" id=\"campus\"  v-model=\"userUpdate.pos\" required>\n                <option value=\"student\">Student</option>\n                <option value=\"employee\">Employee</option>\n                <option value=\"other\">Other (please specify)</option>\n              </select>\n              <small id=\"helpName\" class=\"text-muted\">This is what you are, in the <i class=\"fa fa-university\" aria-hidden=\"true\"></i></small>\n            </div>\n\n            <!-- IF OTHER -->\n            <div class=\"form-group\" v-if=\"userUpdate.pos == 'other'\">\n              <label for=\"other\"><i class=\"fa fa-tag\" aria-hidden=\"true\"></i> Specify Position</label>\n              <input v-model=\"posOther\" type=\"tel\" id=\"other\" class=\"form-control\" aria-describedby=\"helpName\" spellcheck>\n              <small id=\"helpName\" class=\"text-muted\">This is if you chose \"other\" as your position</small>\n            </div>\n\n          </div>\n\n\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn modal-close green\" data-dismiss=\"modal\" @click=\"updatePos\">Save</button>\n            <button type=\"button\" class=\"btn modal-close white black-text\" data-dismiss=\"modal\">Close</button>\n          </div>\n\n        </div>\n      </div>\n\n      \n    <!-- /EDIT POSITION -->\n\n  \n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex'\n\n// exportation\nexport default {\n\n  name: \"profile\",\n\n  data() {\n    return {\n\n      user: {\n        name: null,\n        campus: null,\n        pos: null,\n        cellNo: null,\n        whatsAppNo: null,\n        email: null,\n        studentNo: null,\n        _id: null\n      },\n\n      oldPwd: \"\",\n\n      userUpdate: {\n        name: \"null\",\n        campus: null,\n        pos: null,\n        cellNo: null,\n        whatsAppNo: null,\n        email: null,\n        studentNo: null\n      },\n\n      newPwd: \"\",\n      posOther: \"\"\n\n    }\n\n  },\n\n  methods: {\n\n    ...mapActions(['getCampuses', \"DeAuth\"]),\n\n    getUser(){\n      this.$axios.get('/user/profile', this.$headers())\n        .then(res => {\n        \n          this.user = res.data.profile\n\n        })\n        .catch(err => {\n          this.$toasted.error(err, {icon: \"times-circle\"})\n        })\n    },\n\n    changePwd() {\n\n\n      if(this.newPwd.length < 4 || this.oldPwd.length < 4) {\n        this.$toasted.error(\"password must atleast be 4 charecters long\", {icon: \"times-circle\"})\n      } else {\n\n        let loader = this.$loading.show()\n\n        this.$axios.post('/user/passwordchange', {oldPwd: this.oldPwd, newPwd: this.newPwd},this.$headers()).then(res => {\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.oldPwd = \"\"\n            this.newPwd = \"\"\n          }\n\n          loader.hide()\n\n        })\n        .catch(err => {\n          this.$toasted.error(err, {icon: \"times-circle\"})\n          loader.hide()\n        })\n\n      }\n    },\n\n    setUpdateVals(values) {\n      this.userUpdate = values\n    },\n\n    updateProfile() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.post('/user/profileupdate', {values: this.userUpdate, update: \"profile\"}, this.$headers()).then(res => {\n        \n        if(res.data.error) {\n          this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n        } else {\n          this.$toasted.success(res.data.message, {icon: \"check\"})\n          this.getUser()\n        }\n\n        loader.hide()\n\n      }).catch(err => {\n        this.$toasted.error(err, {icon: \"times-circle\"})\n        loader.hide()\n      })\n    },\n\n    updatePos() {\n      // carefully set postion\n      let position = this.userUpdate.pos\n      let positionOther = this.posOther\n\n      function getPos() {\n\n\n        if(position == 'other') {\n          return positionOther\n        } else {\n          return position\n        }\n      }\n\n      let loader = this.$loading.show()\n\n      this.$axios.post('/user/profileupdate', {values: {pos: getPos()}, update: \"position\"}, this.$headers())\n        .then(res => {\n\n          if(res.data.error) {\n          this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.getUser()\n          }\n\n          loader.hide()\n\n        })\n        .catch(err => {\n\n          this.$toasted.error(err, {icon: \"times-circle\"})\n\n          loader.hide()\n\n        })\n\n    },\n\n    removeSelf() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete('/user/rem/'+this.user._id, this.$headers())\n        .then(res => {\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.DeAuth()\n            this.$router.replace(\"/\")\n          }\n\n          loader.hide()\n\n        }).catch(err => {\n          loader.hide()\n          this.$toasted.error(err, {icon: \"times-circle\"})\n        })\n\n    }\n\n  },\n  // end of methods\n\n  async created() {\n\n    let loader = this.$loading.show()\n\n    await this.getUser()\n    await this.getCampuses()\n\n    loader.hide()\n\n  },\n\n  async beforeMount() { \n    await this.getCampuses()\n    await this.getUser()\n    return false\n  },\n\n  computed: mapGetters(['campuses', 'authInfo'])\n\n\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}