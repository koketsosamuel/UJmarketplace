{"remainingRequest":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\UJmart\\src\\components\\admin\\adminUsers.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\UJmart\\src\\components\\admin\\adminUsers.vue","mtime":1585087233660},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters, mapActions} from 'vuex'\n\nexport default {\n\n  name: \"adminUsers\",\n  data() {\n    return {\n    \n      query: null,\n\n      userS: {\n        users: [],\n        pages: 1,\n        page: 1\n      }\n\n    }\n  },\n  methods: {\n    ...mapActions(['getUsers']),\n\n    search(e) {\n\n      e.preventDefault()\n      this.$router.push(`/search/user/${this.query}/1`)\n\n    },\n    \n\n    remove(id) {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete(`/user/rem/${id}`, {\n        headers: {\n          Authorization: \"Bearer \" + this.$jsCookie.getJSON(\"4u7h3n71c4710n\").token\n        }\n      })\n        .then(res => {\n\n          loader.hide()\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})         \n            this.getUsers(this.users.page)\n          }\n\n        })\n          .catch(err => {\n            this.$toasted.error(err, {icon: \"times-circle\"})\n            loader.hide()\n          })\n    },\n\n    async gotopage(pageNum) {\n      let loader = this.$loading.show()\n      await this.getUsers(pageNum)\n      loader.hide()\n    },\n\n    objectMarkup(obj) {\n      let str = \"\"\n\n      Object.keys(obj).forEach((key) => {\n        str += `<p style=\"padding:0px;margin:0px;\">${key}: ${obj[key]}</p>`\n      })\n\n      return str\n\n    },\n\n    stroke(id) {\n\n      let loader = this.$loading.show()\n\n      this.$axios.put(\"/user/stroke/\"+id,{}, {headers: {Authorization: `Bearer ${this.$jsCookie.getJSON('4u7h3n71c4710n').token}`}})\n        .then(res => {\n\n          loader.hide()\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})            \n          }\n\n        })\n        .catch(err => {\n          loader.hide()\n          this.$toasted.error(err, {icon: \"times-circle\"})\n        })\n\n\n    }\n\n  },\n  computed: mapGetters(['users', 'authInfo']),\n  async created() {\n    await this.getUsers(1)\n    this.userS = await this.users\n  }\n\n\n}\n",{"version":3,"sources":["adminUsers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"adminUsers.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <div class=\"green lighten-4 p-2\">\n\n    <form class=\"form-inline my-2 my-lg-0\" @submit=\"search\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" v-model=\"query\" placeholder=\"Search\" aria-label=\"Search\" required>\n      <button \n        class=\"btn green\" \n        type=\"submit\">\n          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n      </button>\n    </form>\n\n    <div>\n      <input type=\"checkbox\" name=\"c\" id=\"c\"> <label for=\"c\"></label>\n    </div>\n\n    <ul class=\"collapsible\">\n        <li v-for=\"user in userS.users\" :key=\"user._id\">\n          <div class=\"collapsible-header green white-text\">\n            <span class=\"left\">\n              <i class=\"fas fa-user\"></i>{{user.name}} \n            </span>\n\n            <i class=\"right fa fa-times-circle\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"collapsible-body\">\n              <p v-if=\"user._id == authInfo._id\">Come on its you!!</p>\n              <div class=\"data\" v-else v-html=\"objectMarkup(user)\"></div>\n              <button class=\"btn grey\" @click=\"stroke(user._id)\">stroke</button>&nbsp;\n              <button class=\"btn red\" @click=\"remove(user._id)\">Remove</button>\n          </div>\n        </li>\n      </ul>\n\n    <paginate\n      :page-count=\"Number(userS.pages)\"\n      :click-handler=\"gotopage\"\n      container-class=\"pagination mt-4\"\n      page-class=\"page-item\"\n      page-link-class=\"page-link text-white bg-primary\"\n      prev-class=\"page-item\"\n      prev-link-class=\"page-link bg-dark text-white\"\n      next-class=\"page-item\"\n      next-link-class=\"page-link bg-dark text-white\"\n      active-class=\"active disabled font-weight-bold\"      \n    />\n\n    <div v-if=\"userS.users.length == 0\">\n      <h1 class=\"display-1 text-center\">\n        <i class=\"fa fa-user-times\" aria-hidden=\"true\"></i>\n      </h1>\n      <h4 class=\"text-center\">No Users</h4>\n    </div>\n\n\n\n  </div>\n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex'\n\nexport default {\n\n  name: \"adminUsers\",\n  data() {\n    return {\n    \n      query: null,\n\n      userS: {\n        users: [],\n        pages: 1,\n        page: 1\n      }\n\n    }\n  },\n  methods: {\n    ...mapActions(['getUsers']),\n\n    search(e) {\n\n      e.preventDefault()\n      this.$router.push(`/search/user/${this.query}/1`)\n\n    },\n    \n\n    remove(id) {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete(`/user/rem/${id}`, {\n        headers: {\n          Authorization: \"Bearer \" + this.$jsCookie.getJSON(\"4u7h3n71c4710n\").token\n        }\n      })\n        .then(res => {\n\n          loader.hide()\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})         \n            this.getUsers(this.users.page)\n          }\n\n        })\n          .catch(err => {\n            this.$toasted.error(err, {icon: \"times-circle\"})\n            loader.hide()\n          })\n    },\n\n    async gotopage(pageNum) {\n      let loader = this.$loading.show()\n      await this.getUsers(pageNum)\n      loader.hide()\n    },\n\n    objectMarkup(obj) {\n      let str = \"\"\n\n      Object.keys(obj).forEach((key) => {\n        str += `<p style=\"padding:0px;margin:0px;\">${key}: ${obj[key]}</p>`\n      })\n\n      return str\n\n    },\n\n    stroke(id) {\n\n      let loader = this.$loading.show()\n\n      this.$axios.put(\"/user/stroke/\"+id,{}, {headers: {Authorization: `Bearer ${this.$jsCookie.getJSON('4u7h3n71c4710n').token}`}})\n        .then(res => {\n\n          loader.hide()\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})            \n          }\n\n        })\n        .catch(err => {\n          loader.hide()\n          this.$toasted.error(err, {icon: \"times-circle\"})\n        })\n\n\n    }\n\n  },\n  computed: mapGetters(['users', 'authInfo']),\n  async created() {\n    await this.getUsers(1)\n    this.userS = await this.users\n  }\n\n\n}\n</script>\n\n<style scoped>\n\n.right {\n  position: absolute !important;\n  right: 3px;\n}\n\n p {\n  margin: 0px !important;\n  padding: 0px !important;\n}\n\n</style>\n"]}]}