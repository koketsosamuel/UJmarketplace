{"remainingRequest":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\UJmarketplace\\src\\components\\layout\\notifications_.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\src\\components\\layout\\notifications_.vue","mtime":1589894079552},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmarketplace\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport config from \"../../config/config\"\nimport {Hooper, Slide} from \"hooper\"\nimport \"hooper/dist/hooper.css\"\n\nexport default {\n\n  name: \"notification\",\n\n  data: () => ({\n\n    notifications: [],\n    baseUrl: config.axiosConf.baseURL,\n    scroll: false\n\n  }),\n\n  components: {\n    hooper: Hooper,\n    slide: Slide\n  },\n\n  methods: {\n\n    async getNotifications() {\n\n      this.$axios.get('/notification/all')\n        .then(res => {\n          \n          this.notifications = res.data.notifications\n          if(this.notifications.length > 1) {\n            this.scroll = true\n          }\n\n        }).catch(err => {\n\n          this.$toasted.error(err + \"uu\", {icon: \"times-circle\"})\n        \n        })\n     \n    }\n\n  },\n\n  async created() {\n\n    await this.getNotifications()\n    this.baseUrl = this.$baseUrl\n    \n  }\n\n}\n",{"version":3,"sources":["notifications_.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA","file":"notifications_.vue","sourceRoot":"src/components/layout","sourcesContent":["<template>\n  \n  <div class=\"mt-2 SLIDER\" v-if=\"notifications.length > 0\">\n\n    <hooper :itemsToShow=\"1\" pagination=\"yes\" :centerMode=\"true\" :infiniteScroll=\"scroll\" :autoPlay=\"true\" :playSpeed=\"5000\" :wheelControl=\"false\">\n\n      <slide v-for=\"(not, i) in notifications\" :key=\"not._id\" :index=\"i\">\n        <a :href=\"not.link\" class=\"slideimg\">\n          <img :src=\"baseUrl+not.image\" alt=\"\">\n        </a>\n      </slide>\n\n    </hooper>\n        \n  </div>\n\n</template>\n\n<script>\nimport config from \"../../config/config\"\nimport {Hooper, Slide} from \"hooper\"\nimport \"hooper/dist/hooper.css\"\n\nexport default {\n\n  name: \"notification\",\n\n  data: () => ({\n\n    notifications: [],\n    baseUrl: config.axiosConf.baseURL,\n    scroll: false\n\n  }),\n\n  components: {\n    hooper: Hooper,\n    slide: Slide\n  },\n\n  methods: {\n\n    async getNotifications() {\n\n      this.$axios.get('/notification/all')\n        .then(res => {\n          \n          this.notifications = res.data.notifications\n          if(this.notifications.length > 1) {\n            this.scroll = true\n          }\n\n        }).catch(err => {\n\n          this.$toasted.error(err + \"uu\", {icon: \"times-circle\"})\n        \n        })\n     \n    }\n\n  },\n\n  async created() {\n\n    await this.getNotifications()\n    this.baseUrl = this.$baseUrl\n    \n  }\n\n}\n</script>\n\n<style scoped>\n\n  .slideimg img {\n    width: 100%;\n  }\n\n  a {\n    width: 100%;\n    overflow: hidden;\n  }\n\n  .SLIDER {\n    box-shadow: 0px 0px 6px #fff;\n  }\n\n  \n\n  @media (min-width: 993px) {\n    .hooper {\n      height: 26.25vw;\n    }\n  }\n\n  @media (max-width: 992px) {\n    .hooper {\n      height: 31.875vw;\n    }\n  }\n\n  @media (max-width: 600px) {\n    .hooper {\n      height: 33.75vw;\n    }\n  }\n\n</style>\n"]}]}