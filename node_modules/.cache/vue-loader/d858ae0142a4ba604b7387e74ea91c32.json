{"remainingRequest":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\src\\components\\admin\\adminUsers.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\src\\components\\admin\\adminUsers.vue","mtime":1566765111000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Downloads\\UJmart-master\\UJmart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters, mapActions} from 'vuex'\n\nexport default {\n\n  name: \"adminUsers\",\n  data() {\n    return {\n      userD: {\n        name: '',\n        email: '',\n        sNo: '',\n        _id: '',\n        campus: '',\n        pos: '',\n        cellNo: '',\n        whatsAppNo: '',\n      },\n\n      query: null,\n\n      userS: {\n        users: [],\n        pages: 1,\n        page: 1\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['getUsers']),\n\n    setEditData(user) {\n\n      this.userD._id = user._id\n      this.userD.name = user.name\n      this.userD.email = user.email\n      this.userD.sNo = user.studentNo\n      this.userD.campus = user.campus\n      this.userD.pos = user.pos\n\n      if(user.whatsAppNo == null) {\n        this.userD.whatsAppNo = \"Unavailable\"\n      } else {\n        this.userD.whatsAppNo = user.whatsAppNo\n      }\n\n      if(user.cellNo == null) {\n        this.userD.cellNo = \"Unavailable\"\n      } else {\n        this.userD.cellNo = user.cellNo\n      }\n\n    },\n\n    search(e) {\n\n      e.preventDefault()\n      this.$router.push(`/search/user/${this.query}/1`)\n\n    },\n    \n\n    remove() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete(`/user/rem/${this.userD._id}`, {\n        headers: {\n          Authorization: \"Bearer \" + this.authInfo.token\n        }\n      })\n        .then(res => {\n\n          loader.hide()\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})         \n            this.getUsers(this.users.page)\n          }\n\n        })\n          .catch(err => {\n            this.$toasted.error(err, {icon: \"times-circle\"})\n            loader.hide()\n          })\n    },\n\n    async clickEr(pageNum) {\n      let loader = this.$loading.show()\n      await this.getUsers(pageNum)\n      loader.hide()\n    }\n\n  },\n  computed: mapGetters(['users', 'authInfo']),\n  async created() {\n    await this.getUsers(1)\n    this.userS = await this.users\n  }\n\n\n}\n",{"version":3,"sources":["adminUsers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"adminUsers.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <div>\n\n    <h3><i class=\"fa fa-users\"></i> Users</h3>\n\n    <form class=\"form-inline my-2 my-lg-0\" @submit=\"search\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" v-model=\"query\" placeholder=\"Search\" aria-label=\"Search\" required>\n      <button \n        class=\"btn btn-outline-dark my-2 my-sm-0\" \n        type=\"submit\">\n          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n      </button>\n    </form>\n\n    <div class=\"list-group mt-3\">\n      <a href=\"javascript:void(0)\" v-for=\"user in userS.users\" :key=\"user._id\" class=\"list-group-item list-group-item-action list-group-item-primary\" @click=\"setEditData(user)\" >\n        <div> \n\n          <i class=\"fa fa-user\"></i> &nbsp;{{user.name}} <span class=\"badge badge-primary\">{{user.pos}}</span>\n          <span class=\"float-right\">\n            <p v-if=\"user._id == authInfo._id\" class=\"m-0 p-1 bg-dark text-white\">You</p>\n            <div class=\"btn-group\" v-if=\"user._id != authInfo._id\">\n              <button class=\"py-1 btn btn-success\" data-toggle=\"modal\" data-target=\"#userInf\"><i class=\"fa fa-info-circle\"></i></button>\n              <button class=\"btn py-1 btn-danger\" data-toggle=\"modal\" data-target=\"#remUser\"><i class=\"fa fa-trash\"></i></button>\n            </div>\n          </span>\n          <div class=\"clearfix\"></div>\n\n        </div>\n      </a>\n    </div>\n\n    <paginate\n      :page-count=\"Number(userS.pages)\"\n      :click-handler=\"clickEr\"\n      container-class=\"pagination mt-4\"\n      page-class=\"page-item\"\n      page-link-class=\"page-link text-white bg-primary\"\n      prev-class=\"page-item\"\n      prev-link-class=\"page-link bg-dark text-white\"\n      next-class=\"page-item\"\n      next-link-class=\"page-link bg-dark text-white\"\n      active-class=\"active disabled font-weight-bold\"      \n    />\n\n    <div v-if=\"userS.users.length == 0\">\n      <h1 class=\"display-1 text-center\">\n        <i class=\"fa fa-user-times\" aria-hidden=\"true\"></i>\n      </h1>\n      <h4 class=\"text-center\">No Users</h4>\n    </div>\n  \n\n    <!-- USER INFO -->\n    <div class=\"modal fade\" id=\"userInf\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content bg-dark border-0 text-white\">\n          <div class=\"modal-header border-0\">\n            <h5 class=\"modal-title text-orange\"><i class=\"fa fa-user\"></i> {{ userD.name }} <small class=\"text-white badge badge-primary\">{{ userD.pos }}</small></h5>\n              <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n          </div>\n          <div class=\"modal-body text-white\">\n            \n            <p><i class=\"fab fa-whatsapp\"></i> {{ userD.whatsAppNo }}</p>\n            <p><i class=\"fa fa-phone\"></i> {{ userD.cellNo }}</p>\n            <p><i class=\"fa fa-envelope\"></i> {{ userD.email }} </p>\n            <p><i class=\"fa fa-university\"></i> {{ userD.campus }}</p>\n\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">CLOSE</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n    <!-- USER DELETE -->\n    <div class=\"modal fade\" id=\"remUser\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content bg-dark border-0 text-white\">\n          <div class=\"modal-header border-0\">\n            <h5 class=\"modal-title text-orange\"><i class=\"fa fa-user-times\"></i> User</h5>\n              <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <p>Are you sure you want to remove <q class=\"font-weight-bold text-primary\">{{userD.name}}</q>?</p>\n\n\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\n            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" @click=\"remove\">Yes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex'\n\nexport default {\n\n  name: \"adminUsers\",\n  data() {\n    return {\n      userD: {\n        name: '',\n        email: '',\n        sNo: '',\n        _id: '',\n        campus: '',\n        pos: '',\n        cellNo: '',\n        whatsAppNo: '',\n      },\n\n      query: null,\n\n      userS: {\n        users: [],\n        pages: 1,\n        page: 1\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['getUsers']),\n\n    setEditData(user) {\n\n      this.userD._id = user._id\n      this.userD.name = user.name\n      this.userD.email = user.email\n      this.userD.sNo = user.studentNo\n      this.userD.campus = user.campus\n      this.userD.pos = user.pos\n\n      if(user.whatsAppNo == null) {\n        this.userD.whatsAppNo = \"Unavailable\"\n      } else {\n        this.userD.whatsAppNo = user.whatsAppNo\n      }\n\n      if(user.cellNo == null) {\n        this.userD.cellNo = \"Unavailable\"\n      } else {\n        this.userD.cellNo = user.cellNo\n      }\n\n    },\n\n    search(e) {\n\n      e.preventDefault()\n      this.$router.push(`/search/user/${this.query}/1`)\n\n    },\n    \n\n    remove() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete(`/user/rem/${this.userD._id}`, {\n        headers: {\n          Authorization: \"Bearer \" + this.authInfo.token\n        }\n      })\n        .then(res => {\n\n          loader.hide()\n\n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})         \n            this.getUsers(this.users.page)\n          }\n\n        })\n          .catch(err => {\n            this.$toasted.error(err, {icon: \"times-circle\"})\n            loader.hide()\n          })\n    },\n\n    async clickEr(pageNum) {\n      let loader = this.$loading.show()\n      await this.getUsers(pageNum)\n      loader.hide()\n    }\n\n  },\n  computed: mapGetters(['users', 'authInfo']),\n  async created() {\n    await this.getUsers(1)\n    this.userS = await this.users\n  }\n\n\n}\n</script>\n\n<style>\n\n</style>\n"]}]}