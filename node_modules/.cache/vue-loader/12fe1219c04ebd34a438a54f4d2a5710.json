{"remainingRequest":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\UJmart\\src\\components\\admin\\adminNotifications.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\UJmart\\src\\components\\admin\\adminNotifications.vue","mtime":1566765111000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters, mapActions} from 'vuex'\n\n\nexport default {\n\n  name: \"adminCampuses\",\n  data() {\n    return {\n      notification: {\n        title: '',\n        shortDesc: '',\n        notification: '',\n        id: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['getNotifications']),\n\n    setEditData(not) {\n\n      this.notification.title = not.title\n      this.notification.shortDesc = not.shortDesc\n      this.notification.notification = not.notification\n      this.notification.id = not._id\n\n    },\n\n    update() {\n      \n      let loader = this.$loading.show()\n\n      this.$axios.put(`/notification/update/${this.notification.id}`, this.notification)\n        .then(res => {\n          \n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.notification.title = ''\n            this.notification.shortDesc = ''\n            this.notification.notification = ''\n            this.notification.id = ''\n            this.getNotifications()\n          }\n\n          loader.hide()          \n\n        }).catch(err => {\n\n          this.$toasted.error(err, {icon:\"times-circle\"})\n          loader.hide()\n\n        })\n\n    },\n\n    remove() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete(`/notification/remove/${this.notification.id}`)\n        .then(res => {\n          \n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            \n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.notification.title = ''\n            this.notification.shortDesc = ''\n            this.notification.notification = ''\n            this.notification.id = ''\n            this.getNotifications()\n\n          }\n\n          loader.hide()\n\n        })\n          .catch(err => {\n            \n            this.$toasted.error(err, {icon: \"times-circle\"})\n            loader.hide()\n\n          })\n    }\n\n  },\n  computed: mapGetters(['notifications']),\n  created() {\n    this.getNotifications()\n  }\n\n\n}\n",{"version":3,"sources":["adminNotifications.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA","file":"adminNotifications.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <div>\n\n    <h3><i class=\"fa fa-bell\"></i> Notifications</h3>\n\n    <div class=\"list-group mt-3\">\n      <a href=\"javascript:void(0)\" v-for=\"notification in notifications\" :key=\"notification._id\" class=\"list-group-item list-group-item-action list-group-item-primary\" @click=\"setEditData(notification)\" >\n        <div> \n\n          <i class=\"fa fa-bell\"></i> &nbsp;{{notification.title}} \n          <span class=\"float-right\">\n            <div class=\"btn-group\">\n              <button class=\"btn py-1 btn-info\" data-toggle=\"modal\" data-target=\"#upNot\"><i class=\"fa fa-pen\"></i></button>\n              <button class=\"btn py-1 btn-danger\" data-toggle=\"modal\" data-target=\"#remNot\"><i class=\"fa fa-trash\"></i></button>\n            </div>\n          </span>\n          <div class=\"clearfix\"></div>\n\n        </div>\n      </a>\n    </div>\n\n    <div v-if=\"notifications.length == 0\">\n      <h1 class=\"display-1 text-center\">\n        <i class=\"fa fa-times-circle \" aria-hidden=\"true\"></i>\n      </h1>\n      <h4 class=\"text-center\">No Notifications</h4>\n\n    </div>\n\n    <!-- NOTIFICATION -->\n    <div class=\"modal fade\" id=\"upNot\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content bg-dark border-0 text-white\">\n          <div class=\"modal-header border-0\">\n            <h5 class=\"modal-title text-orange\"><i class=\"fa fa-bell\"></i> Notification</h5>\n              <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <div class=\"form-group\">\n              <label for=\"title\">Title</label>\n              <input type=\"text\" v-model=\"notification.title\" id=\"title\" class=\"form-control\" placeholder=\"\" aria-describedby=\"titleHelp\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"sDesc\">Short Description</label>\n              <textarea id=\"sDesc\" class=\"form-control\" v-model=\"notification.shortDesc\" cols=\"30\" rows=\"2\" maxlength=\"200\"></textarea>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"notification\">Notification</label>\n              <textarea id=\"not\" v-model=\"notification.notification\" cols=\"30\" rows=\"5\" class=\"form-control\"></textarea>\n            </div>\n\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"update\" data-dismiss=\"modal\">Add</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n\n    <!-- notification DELETE -->\n    <div class=\"modal fade\" id=\"remNot\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content bg-dark border-0 text-white\">\n          <div class=\"modal-header border-0\">\n            <h5 class=\"modal-title text-orange\"><i class=\"fa fa-align-left\"></i> Notification</h5>\n              <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <p>Are you sure you want to remove this notification?</p>\n\n\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\n            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" @click=\"remove\">Yes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex'\n\n\nexport default {\n\n  name: \"adminCampuses\",\n  data() {\n    return {\n      notification: {\n        title: '',\n        shortDesc: '',\n        notification: '',\n        id: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['getNotifications']),\n\n    setEditData(not) {\n\n      this.notification.title = not.title\n      this.notification.shortDesc = not.shortDesc\n      this.notification.notification = not.notification\n      this.notification.id = not._id\n\n    },\n\n    update() {\n      \n      let loader = this.$loading.show()\n\n      this.$axios.put(`/notification/update/${this.notification.id}`, this.notification)\n        .then(res => {\n          \n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.notification.title = ''\n            this.notification.shortDesc = ''\n            this.notification.notification = ''\n            this.notification.id = ''\n            this.getNotifications()\n          }\n\n          loader.hide()          \n\n        }).catch(err => {\n\n          this.$toasted.error(err, {icon:\"times-circle\"})\n          loader.hide()\n\n        })\n\n    },\n\n    remove() {\n\n      let loader = this.$loading.show()\n\n      this.$axios.delete(`/notification/remove/${this.notification.id}`)\n        .then(res => {\n          \n          if(res.data.error) {\n            this.$toasted.error(res.data.message, {icon: \"times-circle\"})\n          } else {\n            \n            this.$toasted.success(res.data.message, {icon: \"check\"})\n            this.notification.title = ''\n            this.notification.shortDesc = ''\n            this.notification.notification = ''\n            this.notification.id = ''\n            this.getNotifications()\n\n          }\n\n          loader.hide()\n\n        })\n          .catch(err => {\n            \n            this.$toasted.error(err, {icon: \"times-circle\"})\n            loader.hide()\n\n          })\n    }\n\n  },\n  computed: mapGetters(['notifications']),\n  created() {\n    this.getNotifications()\n  }\n\n\n}\n</script>\n\n<style>\n\n</style>\n"]}]}