{"remainingRequest":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\UJmart\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\UJmart\\src\\App.vue","mtime":1585502415945},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\UJmart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n// importations\nimport { mapActions, mapGetters } from 'vuex'\nimport jsCookies from 'js-cookie'\nimport Vue from \"vue\"\n\nexport default {\n  name: 'app',\n\n  methods: {\n    ...mapActions(['authenticate']),\n\n    auth() {\n      let r = this.$route.name\n      let protectedRoutes = [\"admin\",\"addPost\",\"editPost\",\"managePictures\",\"profile\",\"myAds\", \"searchUser\"]\n      let adminRoutes = [\"admin\", \"searchUser\"]\n\n      if(!this.authInfo.loggedIn) {\n\n        if(protectedRoutes.includes(r)) {\n          this.$toasted.error(\"Login first\", {icon: \"times-circle\"})\n          this.$router.replace(\"/login\")\n        }\n\n      } else {\n\n        if(this.authInfo.position != 'admin' && adminRoutes.includes(r)) {\n          this.$toasted.error(\"Not Authorized\", {icon: \"times-circle\"})\n          this.$router.replace(\"/\")\n        }\n\n      }\n    }\n  },\n\n  computed: mapGetters(['authInfo']),\n\n  async created() {\n\n    if(jsCookies.getJSON('4u7h3n71c4710n') != undefined){\n      await this.authenticate(jsCookies.getJSON('4u7h3n71c4710n').authData)\n    }\n\n\n    await this.auth()\n    Vue.nextTick(() => {\n      this.$M.AutoInit()\n    })\n\n  },\n\n  watch: {\n\n    $route() {\n\n      this.auth()\n      Vue.nextTick(() => {\n        this.$M.AutoInit()\n      })\n    }\n\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n\n    <navigation />\n\n    <!-- INJECTED COMPONENT -->\n    <router-view></router-view>\n\n    <!-- <div class=\"footer-container\">\n      <footer-component />\n    </div> -->\n\n  </div>\n</template>\n\n<script>\n\n// importations\nimport { mapActions, mapGetters } from 'vuex'\nimport jsCookies from 'js-cookie'\nimport Vue from \"vue\"\n\nexport default {\n  name: 'app',\n\n  methods: {\n    ...mapActions(['authenticate']),\n\n    auth() {\n      let r = this.$route.name\n      let protectedRoutes = [\"admin\",\"addPost\",\"editPost\",\"managePictures\",\"profile\",\"myAds\", \"searchUser\"]\n      let adminRoutes = [\"admin\", \"searchUser\"]\n\n      if(!this.authInfo.loggedIn) {\n\n        if(protectedRoutes.includes(r)) {\n          this.$toasted.error(\"Login first\", {icon: \"times-circle\"})\n          this.$router.replace(\"/login\")\n        }\n\n      } else {\n\n        if(this.authInfo.position != 'admin' && adminRoutes.includes(r)) {\n          this.$toasted.error(\"Not Authorized\", {icon: \"times-circle\"})\n          this.$router.replace(\"/\")\n        }\n\n      }\n    }\n  },\n\n  computed: mapGetters(['authInfo']),\n\n  async created() {\n\n    if(jsCookies.getJSON('4u7h3n71c4710n') != undefined){\n      await this.authenticate(jsCookies.getJSON('4u7h3n71c4710n').authData)\n    }\n\n\n    await this.auth()\n    Vue.nextTick(() => {\n      this.$M.AutoInit()\n    })\n\n  },\n\n  watch: {\n\n    $route() {\n\n      this.auth()\n      Vue.nextTick(() => {\n        this.$M.AutoInit()\n      })\n    }\n\n  }\n}\n</script>\n\n<style>\n\n  * {\n    border-radius: 0px !important;\n    box-sizing: border-box !important;\n  }\n\n  body {\n    min-height: 100%;\n    padding-bottom: 90px !important;\n    padding-top:0px !important;\n    margin-top: 0px !important;\n  }\n\n  .footer-container {\n    position: fixed;\n    bottom: 0px;\n    left: 0px;\n    width: 100%;\n    height: 80px;\n  }\n\n  .cursor {\n    cursor: pointer;\n  }\n\n  .jumboImage {\n    height: 200px;\n    vertical-align: middle;\n  }\n\n  .orange {\n    background: #FF4500 !important;\n    color: #fff !important;\n    transition: all 0.3s;\n  }\n\n  .btn.orange:hover {\n    background: rgb(212, 57, 0) !important;\n  }\n\n  .text-orange {\n    color: #FF4500 !important;\n  }\n\n  .btn {\n    cursor: pointer;\n  }\n\n\n  ::-webkit-scrollbar {\n    width: 10px;\n    background: #FF4500;\n  }\n\n  ::-webkit-scrollbar-thumb {      \n    background: #b8b7b7;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: #772953;\n  }\n\n  .shadow-black {\n    text-shadow: #000 2px 2px 2px;\n  }\n\n  .shadow-white {\n    text-shadow: rgb(255, 255, 255) 1px 1px 1px;\n  }\n\n  \n  .flex {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100% !important;\n  } \n\n  .post-add {\n    position: fixed !important;\n    right: 0;\n    bottom: 20px;\n    transition: 0.3s all;\n    opacity: 0.75;\n  }\n\n  .post-add:hover {\n    opacity: 1;\n  }\n\n  .h-100 {\n    height: 100% !important;\n  }\n\n  .p-2 {\n    padding: 20px!important;\n  }\n\n  .p-0 {\n    padding: 0px !important;\n  }\n\n  input, textarea {\n    /* border-radius: 5px !important; */\n    border: 1px solid #222 !important;\n    padding: 5px !important;\n  }\n\n  /* .form-select {\n    display: block;\n    background: transparent;\n    border: #000 1px solid;\n  } */\n\n  label {\n    color: #222;\n  }\n\n  .d-none {\n    display: none;\n  }\n\n  .mt-2 {\n    margin-top: 20px;\n  }\n\n  .p-1 {\n    padding: 10px !important;\n  }\n\n\n</style>\n"]}]}